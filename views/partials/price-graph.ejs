<div id="price-graph"></div>
 
<script type="text/javascript">

  dataSet = []
  dates = "<%-data.map((value) => value.date)%>".split(',')
  var prices = "<%-data.map((value) => value.price)%>".split(',').map((value) => Number(value))

  for (let i = 0; i < dates.length; i++) {
    dataSet.push({
      date: new Date(dates[i]),
      price: prices[i]
    })
  }

  dataSet.push({
    date: new Date("2024-01-01"),
    price: 300
  })

  const priceMax = Math.max(...prices) + 20
  yMetaRange = [0,priceMax]

  svg = d3.select("#price-graph")
    .append("svg")
    .attr("width", width + marginLeft + marginRight)
    .attr("height", height + marginTop + marginBottom)  
    .append("g")
    .attr("transform", `translate(${marginLeft},${marginTop})`)

  x = d3.scaleTime()
    .domain(xRange)
    .range([ 0, width ])

  svg.append("g")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.axisBottom(x)
    .ticks(d3.timeMonth.every(1))
    .tickFormat(d3.timeFormat("%b %Y")))

  y = d3.scaleLinear()
    .domain(yMetaRange)
    .range([ height, 0 ])

  svg.append("g")
    .call(d3.axisLeft(y).tickFormat(d3.format('$')))

  svg.selectAll(".point")
    .data(dataSet)
    .enter().append("path")
    .attr("class", "point")
    .attr("d", d3.symbol().type(d3.symbolDiamond).size(30))
    .attr("fill", "#1D63FF")
    .attr("transform", function(d) { return "translate(" + x(d.date) + "," + y(d.price) + ")"; })

  line = d3.line()
    .x(d => x(d.date))
    .y(d => y(d.price))

  svg.append("path")
    .datum(dataSet)
    .attr("fill", "none")
    .attr("stroke", "#1D63FF")
    .attr("stroke-width", 1)
    .attr("d", line)
</script>